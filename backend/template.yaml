AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  gem-guru

  Sample SAM Template for gem-guru

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
  Function:
    Timeout: 10
    Environment:
      Variables:
        Auth0Audience: !Ref Auth0Audience
        Auth0Issuer: !Ref Auth0Issuer
        UserDataTableName: !Ref UserDataTableName
        LOCAL: !Ref IsLocal
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Parameters:
  PipelineRole:
    Type: String
  Auth0Audience:
    Type: String
  Auth0Issuer:
    Type: String
  DomainAPI:
    Type: String
  DomainAPICertificate:
    Type: String
  DomainFrontend:
    Type: String
  DomainFrontendCertificate:
    Type: String
  IsLocal:
    Default: 'false'
    Type: String
  UserDataTableName:
    Default: 'user-data'
    Type: String

Resources:
  FrontendBucket:
    Type: AWS::S3::Bucket

  UserDataTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      TableName: !Ref UserDataTableName

  RestApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Domain:
        DomainName:  !Ref DomainAPI
        CertificateArn: !Ref DomainAPICertificate

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainFrontend
        ViewerCertificate:
          AcmCertificateArn: !Ref DomainFrontendCertificate
          MinimumProtocolVersion: 'TLSv1.2_2021'
          SslSupportMethod: 'sni-only'
        Origins:
          - Id: FrontendBucket
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        DefaultCacheBehavior:
          TargetOriginId: FrontendBucket
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: true
        Enabled: true
        DefaultRootObject: index.html

  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Sub
              - 'arn:aws:s3:::${Bucket}/*'
              - Bucket: !Ref FrontendBucket
          - Effect: Allow
            Principal:
              AWS:
                - !Ref PipelineRole
            Action:
              - "s3:PutObject"
              - "s3:DeleteObject"
            Resource: !Sub
              - 'arn:aws:s3:::${Bucket}/*'
              - Bucket: !Ref FrontendBucket
          - Effect: Allow
            Principal:
              AWS:
                - !Ref PipelineRole
            Action:
              - "s3:ListBucket"
            Resource: !Sub
              - 'arn:aws:s3:::${Bucket}'
              - Bucket: !Ref FrontendBucket
      Bucket: !Ref FrontendBucket

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: CloudFront access identity

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs20.x
      MemorySize: 512
      Policies: AmazonDynamoDBFullAccess
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            RestApiId: !Ref RestApiGateway # Add the RestApiId property
            Method: get
        LoadData:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /load-data
            RestApiId: !Ref RestApiGateway # Add the RestApiId property
            Method: get
        SaveData:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /save-data
            RestApiId: !Ref RestApiGateway # Add the RestApiId property
            Method: post
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${RestApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
  Website:
    Value: !GetAtt CloudFrontDistribution.DomainName
  FrontendBucketName:
    Value: !Ref FrontendBucket